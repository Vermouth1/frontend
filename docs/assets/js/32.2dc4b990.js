(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{409:function(t,a,r){"use strict";r.r(a);var e=r(26),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"浏览器安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器安全"}},[t._v("#")]),t._v(" 浏览器安全")]),t._v(" "),r("h2",{attrs:{id:"页面安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#页面安全"}},[t._v("#")]),t._v(" 页面安全")]),t._v(" "),r("h3",{attrs:{id:"同源策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#同源策略"}},[t._v("#")]),t._v(" 同源策略")]),t._v(" "),r("p",[t._v("如果两个 URL 的协议、域名和端口都相同，我们就称这两个 URL 同源，主要表现在 DOM、Web 数据和网络这三个层面")]),t._v(" "),r("ol",[r("li",[t._v("DOM 层面。同源策略限制了来自不同源的 JavaScript 脚本对当前 DOM 对象读和写的操作。")]),t._v(" "),r("li",[t._v("数据层面。同源策略限制了不同源的站点读取当前站点的 Cookie、IndexDB、LocalStorage 等数据。")]),t._v(" "),r("li",[t._v("网络层面。在默认情况下不能访问跨域的资源。")])]),t._v(" "),r("h3",{attrs:{id:"xss"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[t._v("#")]),t._v(" XSS")]),t._v(" "),r("p",[t._v("跨站脚本（Cross Site Scripting）。指黑客往 HTML 文件中或者 DOM 中注入恶意脚本，从而在用户浏览页面时利用注入的恶意脚本对用户实施攻击的一种手段。")]),t._v(" "),r("ul",[r("li",[t._v("可以窃取 Cookie 信息")]),t._v(" "),r("li",[t._v("可以监听用户行为")]),t._v(" "),r("li",[t._v("可以通过修改 DOM")]),t._v(" "),r("li",[t._v("可以在页面内生成浮窗广告")])]),t._v(" "),r("h4",{attrs:{id:"存储型xss"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#存储型xss"}},[t._v("#")]),t._v(" 存储型XSS")]),t._v(" "),r("ol",[r("li",[t._v("首先黑客利用站点漏洞将一段恶意 JavaScript 代码提交到网站的数据库中；")]),t._v(" "),r("li",[t._v("然后用户向网站请求包含了恶意 JavaScript 脚本的页面；")]),t._v(" "),r("li",[t._v("当用户浏览该页面的时候，恶意脚本就会将用户的 Cookie 信息等数据上传到服务器。")])]),t._v(" "),r("h4",{attrs:{id:"反射型xss"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#反射型xss"}},[t._v("#")]),t._v(" 反射型XSS")]),t._v(" "),r("p",[t._v("恶意 JavaScript 脚本属于用户发送给网站请求中的一部分，随后网站又把恶意 JavaScript 脚本返回给用户。当恶意 JavaScript 脚本在用户页面中被执行时，黑客就可以利用该脚本做一些恶意操作。")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),r("p",[t._v("Web 服务器不会存储反射型 XSS 攻击的恶意脚本，这是和存储型 XSS 攻击不同的地方。")])]),t._v(" "),r("h4",{attrs:{id:"基于-dom-的-xss-攻击"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基于-dom-的-xss-攻击"}},[t._v("#")]),t._v(" 基于 DOM 的 XSS 攻击")]),t._v(" "),r("p",[t._v("基于 DOM 的 XSS 攻击是不牵涉到页面 Web 服务器的。具体来讲，黑客通过各种手段将恶意脚本注入用户的页面中，比如通过网络劫持在页面传输过程中修改 HTML 页面的内容，这种劫持类型很多，有通过 WiFi 路由器劫持的，有通过本地恶意软件来劫持的，它们的共同点是在 Web 资源传输过程或者在用户使用页面的过程中修改 Web 页面的数据。")]),t._v(" "),r("h4",{attrs:{id:"阻止-xss"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#阻止-xss"}},[t._v("#")]),t._v(" 阻止 XSS")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("服务器对输入脚本进行过滤或转码")])]),t._v(" "),r("li",[r("p",[t._v("利用 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSP"),r("OutboundLink")],1)]),t._v(" "),r("ul",[r("li",[t._v("限制加载其他域下的资源文件，这样即使黑客插入了一个 JavaScript 文件，这个 JavaScript 文件也是无法被加载的；")]),t._v(" "),r("li",[t._v("禁止向第三方域提交数据，这样用户数据也不会外泄；")]),t._v(" "),r("li",[t._v("禁止执行内联脚本和未授权的脚本；")])]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("设置CSP")]),t._v(" "),r("ol",[r("li",[t._v("可以使用  Content-Security-Policy HTTP头部 来指定你的策略")]),t._v(" "),r("li",[t._v("可以使用"),r("code",[t._v("<meta>")]),t._v("元素来配置该策略"),r("br"),t._v(" "),r("code",[t._v("<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; img-src https://*; child-src 'none';\">")])])])])]),t._v(" "),r("li",[r("p",[t._v("使用 HttpOnly 属性保护 Cookie 的安全")])])]),t._v(" "),r("h3",{attrs:{id:"csrf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),r("p",[t._v("CSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的")]),t._v(" "),r("ul",[r("li",[t._v("GET 请求，如"),r("code",[t._v('<img src="http://bank.example/withdraw?amount=10000&for=hacker" >')]),t._v("，浏览器会自动发起请求")]),t._v(" "),r("li",[t._v("POST 请求，常使用的是一个自动提交的表单，相当于模拟用户完成了一次POST操作。")]),t._v(" "),r("li",[t._v("链接类型，如"),r("code",[t._v('<a href="http://test.com/csrf/withdraw.php?amount=1000&for=hacker" taget="_blank">重磅消息！！<a/>')])])]),t._v(" "),r("p",[t._v("特点：")]),t._v(" "),r("ol",[r("li",[t._v("攻击一般发起在第三方网站，而不是被攻击的网站。被攻击的网站无法防止攻击发生。")]),t._v(" "),r("li",[t._v("攻击利用受害者在被攻击网站的登录凭证，冒充受害者提交操作；而不是直接窃取数据。")]),t._v(" "),r("li",[t._v("整个过程攻击者并不能获取到受害者的登录凭证，仅仅是“冒用”。")])]),t._v(" "),r("h4",{attrs:{id:"阻止-csrf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#阻止-csrf"}},[t._v("#")]),t._v(" 阻止 CSRF")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("同源检测")]),t._v(" "),r("ul",[r("li",[t._v("使用Origin Header确定来源域名")]),t._v(" "),r("li",[t._v("使用Referer Header确定来源域名")])])]),t._v(" "),r("li",[r("p",[t._v("CSRF Token")]),t._v(" "),r("ol",[r("li",[t._v("服务器需要给这个用户生成一个Token")]),t._v(" "),r("li",[t._v("页面提交的请求携带这个Token")]),t._v(" "),r("li",[t._v("服务器验证Token是否正确")])])]),t._v(" "),r("li",[r("p",[t._v("Samesite Cookie属性")])])]),t._v(" "),r("h2",{attrs:{id:"系统安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#系统安全"}},[t._v("#")]),t._v(" 系统安全")]),t._v(" "),r("p",[t._v("现代浏览器的体系架构，把渲染进程放在安全沙箱中，这样渲染进程内部不能与操作系统直接交互，这样即便渲染进程由于漏洞被攻击，也不会影响到操作系统的。")]),t._v(" "),r("p",[t._v("由于渲染进程内部不能与操作系统直接交互，于是就在浏览器内核中实现了持久存储、网络访问和用户交互等一系列与操作系统交互的功能，然后通过 IPC 和渲染进程进行交互。")]),t._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://juejin.im/post/6844903689702866952",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端安全系列之二：如何防止CSRF攻击？"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://time.geekbang.org/column/article/154110",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSRF攻击：陌生链接不要随便点"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://time.geekbang.org/column/article/152807",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨站脚本攻击（XSS）：为什么Cookie中有HttpOnly属性？"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=v.exports}}]);